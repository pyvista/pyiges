name: Unit Testing

on:
  pull_request:
  workflow_dispatch:
  push:
    tags:
      - "*"
    branches:
      - main

jobs:
  unit_tests:
    name: Unit testing
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest]
        python-version: ['3.8', '3.9', '3.10', '3.11']

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Create package
        run: python setup.py sdist

      - name: Validate package
        if: ${{ runner.os == 'Linux' }}
        run: |
          pip install twine
          twine check dist/*

      - name: Install package and smoke test
        run: |
          pip install -e . --disable-pip-version-check --find-links=dist
          cd tests/
          python -c "import pyiges"

      - name: Unit testing
        run: |
          pip install -r requirements_test.txt --disable-pip-version-check
          cd tests
          pytest -v --cov pyiges --cov-report xml
          pip install -e ..[full] --disable-pip-version-check --find-links=dist
          pytest -v --cov pyiges --cov-report xml --expect-full-module

      - name: Upload to PyPi
        if: github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags')
        run: |
          pip install twine wheel
          python setup.py sdist bdist_wheel
          twine upload --skip-existing dist/pyiges*
        env:
          TWINE_USERNAME: "__token__"
          TWINE_PASSWORD: ${{ secrets.TWINE_TOKEN }}
          TWINE_REPOSITORY_URL: "https://upload.pypi.org/legacy/"

  Release:
    if: github.event_name == 'push' && contains(github.ref, 'refs/tags')
    needs: [unit_tests]
    runs-on: ubuntu-latest
    steps:
      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          generate_release_notes: true
